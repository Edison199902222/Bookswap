class Union_Find:
    def __init__(self, n):
        self.father = {i:i for i in range(n)}
        self.count = n
        # 可以查看 某一个node 有几个联通
        self.rank = [1] * n

    def find(self, x):
        if self.father[x] == x:
            return x
        self.father[x] = self.find(self.father[x])
        return self.father[x]

    def union(self, x, y):
        if self.rank[x] < self.rank[y]:
            x, y = y, x
        self.father[y] = x
        self.rank[x] += self.rank[y]
        self.count -= 1

    def find_union(self, x, y):
        father_x, father_y = self.find(x), self.find(y)
        if father_x != father_y:
            self.union(father_x, father_y)
            # 表示，如果本来不是联通 return true
            return True
        # 如果本来是联通的 return false
        return False


